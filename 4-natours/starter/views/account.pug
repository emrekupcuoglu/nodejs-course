extends base

mixin navItem(link, text, icon, active)
  li(class=`${active ? "side-nav--active" : ""}`)
    a(href=`${link}`)
      svg
        use(xlink:href="img/icons.svg#icon-briefcase")
      | #{ text }

block content
  main.main
  .user-view
    nav.user-view__menu
      ul.side-nav
        +navItem("#","Settings","settings",true)
        +navItem("#","My bookings","briefcase")
        +navItem("#","My Reviews","star")
        +navItem("#","Billing","credit-card")
      - if(user.role==="admin")
      .admin-nav
        h5.admin-nav__heading Admin
        ul.side-nav
          +navItem("#","Manage tours","map",true)
          +navItem("#","Manage users","users")
          +navItem("#","Manage Reviews","star")
          +navItem("#","Manage bookings","briefcase")
    .user-view__content
      .user-view__form-container
        h2.heading-secondary.ma-bt-md Your account settings

        //- This will submit the data when we click the button
        //- There are different ways of sending data, the default is the URL encoded
        //- it will encode all the data we are submitting in the url like a query string.
        //- We also need to specify the name property on the fields we want to send.
        //- The problem with this approach is that this reloads the page
        //- and if there is an error it renders a whole new page with only the error message
        //- and it is not a good user experience so we have used the API we have created
        //- * If we want to send a file using this approach and NOT use an API then we need to add another attribute
        //- called enctype.
        //- The enctype needs to be multipart/form-data
        //- Multipart is always for sending files to the server.
        //- form.form.form-user-data(action="/submit-user-data", method="POST",enctype="multipart/form-data")
        form.form.form-user-data
          .form__group
            label.form__label(for="name") Name
            input#name.form__input(
              type="text",
              value=`${user.name}`,
              required,
              name="name"
            )
          .form__group.ma-bt-md
            label.form__label(for="email") Email address
            input#email.form__input(
              type="email",
              value=`${user.email}`,
              required,
              name="email"
            )
          .form__group.form__photo-upload
          .form__group.form__photo-upload
            img.form__user-photo(
              src=`/img/users/${user.photo}`,
              alt="User photo"
            )
            //- This input field for uploading images
            //- With the accept attribute we specify which kinds of files we accept
            //- Right know we are accepting every mime type that starts with image
            //- because the wildcard (*) symbol selects everything
            //- We need to set the name attribute to photo because it is the name
            //- of the field that we have in our user document and it is also the field name the  multer is expecting
            //- because we have set the multer to expect a field name with photo.
            input#photo.form__upload(
              type="file",
              accept="image/*",
              name="photo"
            )
            //- When we click the label it will activate the input element that has the
            //- id that we have specified here with the for attribute.
            label(for="photo") Choose new photo

          .form__group.right
            button.btn.btn--small.btn--green Save settings
      .line &nbsp;
      .user-view__form-container
        h2.heading-secondary.ma-bt-md Password change
        form.form.form-user-password
          .form__group
            label.form__label(for="password-current") Current password
            input#password-current.form__input(
              type="password",
              placeholder="••••••••",
              required,
              minlength="8"
            )
          .form__group
            label.form__label(for="password") New password
            input#password.form__input(
              type="password",
              placeholder="••••••••",
              required,
              minlength="8"
            )
          .form__group.ma-bt-lg
            label.form__label(for="password-confirm") Confirm password
            input#password-confirm.form__input(
              type="password",
              placeholder="••••••••",
              required,
              minlength="8"
            )
          .form__group.right
            button.btn.btn--small.btn--green.btn--save-password Save password
